{"version":3,"sources":["components/Nav.js","components/Form.js","components/AddUser.js","components/Card.js","module/Admin.js","components/CardSwipe.js","Swipe.js","module/viewer.js","components/Button.js","App.js","serviceWorker.js","index.js"],"names":["NavbarFeatures","react_default","a","createElement","lib","brand","className","right","this","props","children","Component","Forms","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","inputHandler","event","user","objectSpread","state","name","target","Name","value","Age","City","Work","About","setState","inputSubmit","length","values","JSON","parse","localStorage","getItem","push","PhotoUrl","setItem","stringify","users","alert","fileHandler","e","reader","FileReader","self","assertThisInitialized","onload","result","readAsDataURL","files","editData","evt","index","toConsumableArray","console","log","like","s","type","onChange","label","id","accept","defineProperty","waves","onClick","AddUser","userDataHandler","userData","fixedFooter","trigger","floating","large","icon","tooltip","Form_Forms","UserCard","deleteData","splice","window","location","reload","handleLike","likes","_this2","m","header","image","actions","viewer","key","components_AddUser","style","marginLeft","overflow","src","width","alt","Admin","changeData","person","checkEdit","Nav_NavbarFeatures","color","map","i","Card_UserCard","cardStyles","borderRadius","height","cursor","userSelect","position","display","alignItems","justifyContent","top","CardSwipe","_ref","_ref$zIndex","zIndex","appStyles","minHeight","fontFamily","wrapperStyles","actionsStyles","marginTop","Swipe","cards","checkSwipe","cardIndex","remove","slice","swipe","Materialize","toast","react_swipy_min_default","buttons","_ref2","left","onSwipe","onAfterSwipe","components_CardSwipe","Viewer","Swipe_Swipe","buttonStyles","background","border","Button","App","handle","check","components_Button","module_Admin","Boolean","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.19bb3759.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport {Navbar,NavItem} from 'react-materialize';\r\nexport default class NavbarFeatures extends Component {\r\n    //NavBar for Admin and Viewer\r\n    render() {\r\n        return (\r\n            <Navbar brand='Tinda' className='pink' right>\r\n            <NavItem>\r\n                {this.props.children}\r\n            </NavItem>\r\n          </Navbar>\r\n        );\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport {Card,Row,Input,Col,Button} from 'react-materialize';\r\nexport default class Forms extends Component {\r\n    //Getting user information\r\n    constructor(){\r\n         super();\r\n                this.state={\r\n                    users:[],\r\n                    user:{\r\n                    Name:\"\",\r\n                    Age:\"\",\r\n                    City:\"\",\r\n                    Work:\"\",\r\n                    PhotoUrl:\"\",\r\n                    About:\"\",\r\n                    like:0\r\n                    }\r\n\r\n                }\r\n        }\r\n        componentWillMount(){\r\n             const users=[...JSON.parse(localStorage.getItem(\"users\"))];\r\n             const user={...users[this.props.index]};\r\n             console.log(user);\r\n             this.setState({user:user});\r\n        }\r\n        //Function handle the input box changing values\r\n        inputHandler=(event)=>{\r\n            const user={...this.state.user};\r\n            var name=event.target.name;\r\n            if(name===\"Name\")\r\n            user.Name=event.target.value;\r\n            if(name===\"Age\")\r\n            user.Age=event.target.value;\r\n            if(name===\"City\")\r\n            user.City=event.target.value;\r\n            if(name===\"Work\")\r\n            user.Work=event.target.value;\r\n            if(name===\"About\")\r\n            user.About=event.target.value;\r\n           this.setState({\r\n             user:user\r\n           }\r\n           );\r\n          }\r\n          //function handle the values when user submit the information\r\n          inputSubmit=(event)=>{\r\n               const user={...this.state.user};\r\n            if(user.Name.length!==0 && user.Age.length!==0 && user.City.length!==0 && user.Work.length!==0 && user.About.length!==0)\r\n                {\r\n                    const values=JSON.parse(localStorage.getItem(\"users\"));\r\n                    values.push(user);\r\n                    //After the submitting this function removes the values in the form\r\n                    const userr={\r\n                                Name:\"\",\r\n                                Age:\"\",\r\n                                City:\"\",\r\n                                Work:\"\",\r\n                                PhotoUrl:\"\",\r\n                                About:\"\",\r\n                                 }\r\n                    this.setState({user:userr\r\n                    });\r\n                   localStorage.setItem(\"users\",JSON.stringify(values));\r\n                   this.setState({\r\n                    users:values\r\n                  });\r\n                }\r\n                else\r\n                {\r\n                    alert(\"Enter all input\");\r\n                }\r\n         }\r\n         //This function handle the file url\r\n         fileHandler=(e)=>{\r\n            const reader=new FileReader();\r\n            const self = this;\r\n            reader.onload=function(){\r\n                self.state.user.PhotoUrl=reader.result;\r\n            }\r\n            reader.readAsDataURL(e.target.files[0]);\r\n           \r\n         }\r\n         //This function  excecutes when the Admin Edit their Information \r\n         editData =(evt)=>{\r\n            //  evt.preventDefault();\r\n             const index=this.props.index;\r\n            const user={...this.state.user};\r\n            if(user.Name.length!==0 && user.Age.length!==0 && user.City.length!==0 && user.Work.length!==0  && user.About.length!==0)\r\n                {\r\n                    const users=[...JSON.parse(localStorage.getItem(\"users\"))];\r\n                    users[index]=this.state.user;\r\n                    console.log(index);\r\n                    this.setState({\r\n                         user:users\r\n                    });\r\n                   localStorage.setItem(\"users\",JSON.stringify(users));\r\n        }\r\n    }\r\n    render() {\r\n return (\r\n    // Form for getting the information for user\r\n     \r\n            <div>\r\n             <Card className='hoverable'>\r\n                    <Row>\r\n                          <form>\r\n                                <Input s={12} type=\"text\" onChange={this.inputHandler} value={this.state.user.Name} label=\"Name\"  name=\"Name\"/>\r\n                                <Input s={12} type=\"text\" onChange={this.inputHandler} value={this.state.user.Age} label=\"Age\"   name=\"Age\"/>\r\n                                <Input s={12} type=\"text\" onChange={this.inputHandler} value={this.state.user.City} label=\"City\"  name=\"City\"/>\r\n                                <Input s={12} type=\"text\" onChange={this.inputHandler} value={this.state.user.Work} label=\"Work\"  name=\"Work\"/>\r\n                                <Input s={12} type=\"file\" id=\"i\" onChange={this.fileHandler} label=\"PhotoUrl\"  accept=\"image/x-png,image/gif,image/jpeg\"  name=\"PhotoUrl\"/>\r\n                                <Input s={12} type=\"text\" onChange={this.inputHandler} value={this.state.user.About} label=\"About\"  name=\"About\"/>                                \r\n                                <div>\r\n                                {this.props.index>=0?null:<Button waves='green' className=\"blue\" type=\"submit\" onClick={this.inputSubmit} className=\"blue\">Add</Button>}\r\n                                {this.props.index>=0?<Button waves='purple' className=\"red\" onClick={this.editData} >Update</Button>:null}\r\n                                 </div>\r\n                         </form>\r\n                    </Row>\r\n               </Card>\r\n          </div>\r\n        );\r\n    }\r\n         }\r\n","import React, { Component } from 'react';\r\nimport {Button ,Modal } from 'react-materialize';\r\nimport Form from '../components/Form';\r\nclass AddUser extends Component {\r\n  constructor(){\r\n    super()\r\n    {\r\n      this.state={\r\n        userData:{}\r\n      }\r\n    }\r\n  }\r\n  userDataHandler=()=>{\r\n    this.setState({userData:this.props.userData});\r\n  }\r\n    render() {\r\n      return (\r\n        <div className=\"App\">\r\n            {/* Modal for Getting the user info or Edit the info  */}\r\n                    <Modal\r\n                    className=\"yellow\"\r\n                    \r\n                        fixedFooter\r\n                        trigger={<Button floating large onClick={this.userDataHandler} className={this.props.index>=0?\"red\":\"yellow\"} waves='light' icon={this.props.index>=0?\"edit\":\"add\"} tooltip={this.props.index>=0?\"Edit your Info\":\"Add New User\"} />}>\r\n                    <div>\r\n                      \r\n                    <Form index={this.props.index} userData={this.props.userData}/>\r\n                    </div>\r\n            </Modal>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n  \r\n  export default AddUser;","import React, { Component } from 'react';\r\nimport {Card,CardTitle ,Col,Button,Modal} from 'react-materialize';\r\nimport AddUser from './AddUser';\r\n\r\n\r\nexport default class UserCard extends Component {\r\n    constructor(){\r\n        super();\r\n            this.state={\r\n                likes:0\r\n        }\r\n    }\r\n    componentWillMount(){\r\n        let values=[...JSON.parse(localStorage.getItem(\"users\"))];\r\n        let likes=values[this.props.index].like;\r\n        if(likes==null)\r\n        {\r\n            likes=0;\r\n        }\r\n        this.setState({likes:likes});\r\n    }\r\n    //Function for deleting the particlar user\r\n    deleteData=(index)=>{\r\n        let values=JSON.parse(localStorage.getItem(\"users\"));\r\n            values.splice(index, 1);     \r\n                        localStorage.setItem(\"users\",JSON.stringify(values));\r\n                        window.location.reload(); \r\n    \r\n    }\r\n    handleLike=()=>{\r\n        let values=[...JSON.parse(localStorage.getItem(\"users\"))];\r\n        if(values[this.props.index].like==null)\r\n        values[this.props.index].like=1;\r\n        else{\r\n        values[this.props.index].like=values[this.props.index].like+1;\r\n        }\r\n        // console.log(values[this.props.index].like);\r\n        localStorage.setItem(\"users\",JSON.stringify(values));\r\n        this.setState({\r\n            likes:values[this.props.index].like\r\n        })\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                    <Col s={12} m={4}>\r\n                    <Card className='small hoverable'\r\n                        header={<CardTitle image={this.props.userData.PhotoUrl}></CardTitle>}\r\n                        actions={[ \r\n                            <h6>{this.props.userData.Name}</h6>, \r\n                            this.props.viewer?null:<Button waves='purple' className=\"red\" key={this.props.index} onClick={()=>this.deleteData(this.props.index)} tooltip=\"delete the user\">Delete</Button>\r\n                            ,this.props.viewer?null:<AddUser index={this.props.index} userData={this.props.userData}/>,\r\n                            <i onClick={()=>this.handleLike()} style={{marginLeft:\"70%\",overflow:\"auto\"}} className=\"material-icons orange600\">favorite_border</i>, <span>{this.state.likes}</span>\r\n                        ]}>\r\n                   </Card>\r\n                    <Modal\r\n                    className=\"pink card-small\"\r\n                        fixedFooter\r\n                        trigger={<i className=\"material-icons orange600\">info</i>}>\r\n                    <div>\r\n                    <div className=\"container\">\r\n                          <Col m={6} s={12}>\r\n                              <div className=\"card-image\">\r\n                              <img src={this.props.userData.PhotoUrl} width=\"30%\" alt=\"\"/>\r\n                              </div>\r\n                              <Card className='hoverable'>\r\n                              Name:{ this.props.userData.Name}\r\n                              </Card>\r\n                              <Card className='hoverable'>\r\n                              Age:{ this.props.userData.Age}<br/>\r\n                              </Card>   \r\n                              <Card className='hoverable'>\r\n                              City:{ this.props.userData.City}<br/>\r\n                              </Card>\r\n                              <Card className='hoverable'>\r\n                              Work:{ this.props.userData.Work}<br/>\r\n                              </Card>\r\n                              <Card className='hoverable'>\r\n                              About:{ this.props.userData.Name}<br/>\r\n                              </Card>\r\n                           </Col> \r\n                    </div>  \r\n                    </div>\r\n           </Modal>\r\n                           \r\n                    </Col>\r\n          </div>\r\n        );\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport '../App.css';\r\nimport NavBar from '../components/Nav';\r\nimport {Card,Row} from 'react-materialize';\r\nimport UserCard from '../components/Card';\r\nimport AddUser from '../components/AddUser';\r\n\r\nclass Admin extends Component {\r\n    constructor(){\r\n      super();\r\n      this.state={\r\n        users:[]\r\n      }\r\n    }\r\n    componentWillMount(){\r\n      if(localStorage.getItem(\"users\")===null)\r\n      {\r\n        const users=[];\r\n        localStorage.setItem(\"users\",JSON.stringify(users));\r\n      }\r\n      else{\r\n        const values=JSON.parse(localStorage.getItem(\"users\"));\r\n        this.setState({\r\n          users:values\r\n        });\r\n      }\r\n    }\r\n    changeData=(index)=>{\r\n      const person={\r\n          ...this.state.users[index]\r\n      }\r\n      this.setState({\r\n          person:person\r\n      });\r\n      this.setState({\r\n        index:index\r\n    });\r\n    this.setState({\r\n        checkEdit:true\r\n    });\r\n  }\r\n\r\n  \r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n      <NavBar><AddUser/></NavBar>\r\n      <div className=\"container\">\r\n      <Card className='hoverable'>\r\n      <center><h5 className=\"pink\" style={{color:'white'}}>USERS</h5></center>\r\n      <Row> {this.state.users.map((user, i) => <UserCard\r\n                 key={i} userData = {user}  \r\n                 index={i}  />\r\n                 )}\r\n               \r\n      </Row>\r\n    \r\n      \r\n      </Card>\r\n      </div>\r\n     \r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Admin;","import React from \"react\";\r\n\r\nconst cardStyles = {\r\n  // background: \"whitesmoke\",\r\n  borderRadius: 3,\r\n  width: \"300px\",\r\n  height: \"100px\",\r\n  cursor: \"pointer\",\r\n  userSelect: \"none\",\r\n  position: \"absolute\",\r\n  display: \"flex\",\r\n  alignItems: \"center\",\r\n  justifyContent: \"center\",\r\n  top: 0\r\n};\r\n\r\nconst CardSwipe = ({ zIndex = 0, children }) => (\r\n  <div style={{ ...cardStyles, zIndex }}>{children}</div>\r\n);\r\n\r\nexport default CardSwipe;\r\n","import React, { Component } from 'react';\r\nimport Swipeable from \"react-swipy\";\r\nimport CardSwipe from \"./components/CardSwipe\";\r\nimport UserCard from './components/Card';\r\nimport {Toast, Card} from 'react-materialize';\r\nconst appStyles = {\r\n    height: \"100%\",\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    width: \"100%\",\r\n    minHeight: \"100vh\",\r\n    fontFamily: \"sans-serif\",\r\n    overflow: \"hidden\"\r\n  };\r\n  \r\n  const wrapperStyles = { position: \"relative\", width: \"250px\", height: \"250px\" };\r\n  const actionsStyles = {\r\n    display: \"flex\",\r\n    justifyContent: \"space-between\",\r\n    marginTop: 12\r\n  };\r\n  \r\n  export default class Swipe extends Component {\r\n    state = {\r\n        cards: [],\r\n        index:0,\r\n        checkSwipe:false,\r\n        cardIndex:0\r\n    };\r\n    componentWillMount(){\r\n      //Retrive the data from localstorage \r\n        const users=JSON.parse(localStorage.getItem(\"users\"));\r\n        //putting the all user data cards \r\n        const cards=users.map((user, i) => \r\n        (<UserCard\r\n        key = {i} userData = {user}  \r\n        index={i}  viewer={true}/>\r\n        ))\r\n        console.log(cards);\r\n        this.setState({\r\n          cards:cards\r\n        });\r\n        \r\n        \r\n    }\r\n  \r\n    remove = () =>{\r\n         this.setState(({ cards }) => ({ cards: cards.slice(1, cards.length) }));\r\n    }\r\n    swipe = (e) =>{\r\n      const index=this.state.cardIndex;\r\n      \r\n      if(e===\"right\")\r\n      {\r\n        window.Materialize.toast(\"Liked\", 1500,'teal rounded');\r\n        let values=[...JSON.parse(localStorage.getItem(\"users\"))];\r\n        values[index].like=values[index].like+1;\r\n        localStorage.setItem(\"users\",JSON.stringify(values));\r\n        this.setState({\r\n          cardIndex:this.state.cardIndex+1\r\n        })\r\n      }\r\n      else{\r\n        window.Materialize.toast(\"DisLike\", 1500,'red rounded');\r\n      }\r\n    }\r\n    render() {\r\n      const { cards } = this.state;\r\n  \r\n      return (\r\n        <div style={appStyles}>\r\n          <div style={wrapperStyles}>\r\n            {cards.length > 0 && (\r\n              <div style={wrapperStyles}>\r\n                  \r\n                <Swipeable\r\n                  buttons={({ right, left }) => (\r\n                    <div style={actionsStyles}>\r\n                    </div>\r\n                  )}\r\n                  \r\n                  onSwipe={this.swipe}\r\n                  onAfterSwipe={this.remove}\r\n                >\r\n                {/* <div style={{border:'2px solid black',height:'12  0%'}}> */}\r\n                  <CardSwipe>{cards[0]}</CardSwipe>\r\n                  {/* </div> */}\r\n                </Swipeable>\r\n                {cards.length > 1 && <CardSwipe zIndex={-2}>{cards[1]}</CardSwipe>}\r\n              </div>\r\n            )}\r\n            {/* {cards.length <= 1 && <CardSwipe zIndex={-2}>No more Users</CardSwipe>} */}\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n  }","import React, { Component } from 'react';\r\nimport NavBar from '../components/Nav';\r\nimport Swipe from '../Swipe';\r\nimport {Chip} from 'react-materialize';\r\n\r\nclass Viewer extends Component {\r\n    render() {\r\n      return (\r\n        <div className=\"App\">\r\n        <NavBar/>\r\n        <br/>\r\n        <Chip>\r\n          Swipe left/Right to next user \r\n        </Chip>\r\n        {/* Swiper cards */}\r\n        <Swipe/>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n  \r\n  export default Viewer;","import React from \"react\";\r\n\r\nconst buttonStyles = {\r\n  background: \"whitesmoke\",\r\n  cursor: \"pointer\",\r\n  border: \"none\",\r\n  borderRadius: 3,\r\n};\r\n\r\nconst Button = ({ children, onClick }) => (\r\n  <button onClick={onClick} style={{ ...buttonStyles }}>\r\n    {children}\r\n  </button>\r\n);\r\n\r\nexport default Button;","import React, { Component } from 'react';\nimport './App.css';\nimport Admin from './module/Admin';\nimport Viewer from './module/viewer';\nimport Button from './components/Button';\n\nclass App extends Component {\n  constructor(){\n    super();\n    this.state={\n      check:true\n    }\n    \n  }\n  handle=()=>{\n    this.setState(\n      {\n        check:!this.state.check\n      }\n    );\n  }\n  render() {\n    return (\n      <div className=\"App\">\n      {/* Button for move to Admin or Viewer */}\n       <Button onClick={this.handle}>{this.state.check?\"Viewer\":\"Admin\"}</Button>\n       {this.state.check?<Admin/>:<Viewer/>}\n      \n      </div>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}